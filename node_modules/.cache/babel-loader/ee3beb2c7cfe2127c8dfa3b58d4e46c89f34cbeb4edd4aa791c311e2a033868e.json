{"ast":null,"code":"import _slicedToArray from\"/Users/amrita/Documents/GitHub/TextUtils/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import { logDOM } from '@testing-library/react';\nimport React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Textform(props){var handleUpClick=function handleUpClick(){setText(text.toUpperCase());props.showAlert(\"Converted to upper case!\",\"success\");};var handleOnChange=function handleOnChange(event){setText(event.target.value);};var handleLowClick=function handleLowClick(){setText(text.toLowerCase());props.showAlert(\"Converted to lower case!\",\"success\");};var handleClear=function handleClear(event){setText(\"\");props.showAlert(\"Text cleared!\",\"success\");};var handleCopyText=function handleCopyText(){var myText=document.getElementById(\"myBox\");myText.select();navigator.clipboard.writeText(myText.value);props.showAlert(\"Text copied to clipboard!\",\"success\");};var _useState=useState(\"Enter text here\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];// use the function settext(\" some text \") to change the state.\nvar mystyle={border:\"1px solid black\"};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container text-\".concat(props.textMode),children:[/*#__PURE__*/_jsx(\"h3\",{children:props.heading}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3 \",children:/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control bg-\".concat(props.mode,\" border-\").concat(props.textMode,\" text-\").concat(props.textMode),onChange:handleOnChange,value:text,id:\"myBox\",rows:\"10\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-\".concat(props.mode,\" mx-2 border-\").concat(props.textMode,\" \"),style:mystyle,onClick:handleUpClick,children:\"Convert to uppercase\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-\".concat(props.mode,\" mx-2 border-\").concat(props.textMode,\" \"),style:mystyle,onClick:handleLowClick,children:\"Convert to lowercase\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-\".concat(props.mode,\" mx-2 border-\").concat(props.textMode,\" \"),style:mystyle,onClick:handleClear,children:\"Clear Text\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-\".concat(props.mode,\" mx-2 border-\").concat(props.textMode,\" \"),style:mystyle,onClick:handleCopyText,children:\"Copy Text\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container text-\".concat(props.textMode,\" my-4\"),children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Your text summary\"}),/*#__PURE__*/_jsxs(\"p\",{children:[text.split(\" \").length,\" words, \",text.length,\" characters\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[0.008*text.split(\" \").length,\" minutes read\"]}),/*#__PURE__*/_jsx(\"h4\",{children:\"Preview\"}),/*#__PURE__*/_jsx(\"p\",{children:text.length>0?text:\"Please enter something in the text box above to preview it here.\"})]})]});}","map":{"version":3,"names":["React","useState","Textform","props","handleUpClick","setText","text","toUpperCase","showAlert","handleOnChange","event","target","value","handleLowClick","toLowerCase","handleClear","handleCopyText","myText","document","getElementById","select","navigator","clipboard","writeText","mystyle","border","textMode","heading","mode","split","length"],"sources":["/Users/amrita/Documents/GitHub/TextUtils/src/components/Textform.js"],"sourcesContent":["// import { logDOM } from '@testing-library/react';\nimport React, { useState } from 'react'\n\nexport default function Textform(props) {\n\n    const handleUpClick = () => {\n        setText(text.toUpperCase())\n        props.showAlert(\"Converted to upper case!\", \"success\")\n    }\n\n    const handleOnChange = (event) => {\n        setText(event.target.value)\n    }\n\n    const handleLowClick = () => {\n        setText(text.toLowerCase())\n        props.showAlert(\"Converted to lower case!\", \"success\")\n    }\n\n    const handleClear = (event) => {\n        setText(\"\")\n        props.showAlert(\"Text cleared!\", \"success\")\n    }\n    const handleCopyText = ()=>{\n\n        var myText = document.getElementById(\"myBox\");\n            myText.select();\n            navigator.clipboard.writeText(myText.value);\n            props.showAlert(\"Text copied to clipboard!\", \"success\")\n    };\n\n\n    const [text, setText] = useState(\"Enter text here\");\n    // use the function settext(\" some text \") to change the state.\n\n    \n    let mystyle = {\n        border: \"1px solid black\"\n    }\n\n\n    return (\n        <>\n            <div className={`container text-${props.textMode}`}>\n                <h3>{props.heading}</h3>\n                <div className=\"mb-3 \">\n                    <textarea className={`form-control bg-${props.mode} border-${props.textMode} text-${props.textMode}`} onChange={handleOnChange} value={text}  id=\"myBox\" rows=\"10\"></textarea>\n                </div>\n\n                <button className={`btn btn-${props.mode} mx-2 border-${props.textMode} `} style = {mystyle} onClick={handleUpClick}>Convert to uppercase</button>\n                <button className={`btn btn-${props.mode} mx-2 border-${props.textMode} `} style = {mystyle} onClick={handleLowClick}>Convert to lowercase</button>\n                <button className={`btn btn-${props.mode} mx-2 border-${props.textMode} `} style = {mystyle} onClick={handleClear}>Clear Text</button>\n                <button className={`btn btn-${props.mode} mx-2 border-${props.textMode} `} style = {mystyle} onClick={handleCopyText}>Copy Text</button>\n\n            </div>\n            <div className={`container text-${props.textMode} my-4` } >\n                <h4>Your text summary</h4>\n                <p>{text.split(\" \").length} words, {text.length} characters</p>\n                <p>{0.008 * text.split(\" \").length} minutes read</p>\n                <h4>Preview</h4>\n                <p>{text.length>0?text:\"Please enter something in the text box above to preview it here.\"}</p>\n            </div>\n        </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}