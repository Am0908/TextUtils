{"ast":null,"code":"import _slicedToArray from \"/Users/amrita/react-tutorial/textutils/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/amrita/react-tutorial/textutils/src/App.js\";\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nfunction App() {\n  var _useState = useState('light'),\n    _useState2 = _slicedToArray(_useState, 2),\n    mode = _useState2[0],\n    setmode = _useState2[1];\n  var _useState3 = useState('dark'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    textMode = _useState4[0],\n    settextMode = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    alert = _useState6[0],\n    setalert = _useState6[1];\n  var toggleMode = function toggleMode() {\n    if (mode === 'light') {\n      setmode(\"dark\");\n      settextMode(\"light\");\n      document.body.style.backgroundColor = \"#151515\";\n      showAlert(\"Dark mode has been enabled.\", \"success\");\n      document.title = 'TextUtils - Dark mode';\n    } else {\n      setmode(\"light\");\n      settextMode(\"dark\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled.\", \"success\");\n      document.title = 'TextUtils - Light mode';\n    }\n  };\n  var showAlert = function showAlert(message, type) {\n    setalert({\n      msg: message,\n      type: type\n    });\n    setTimeout(function () {\n      setalert(null);\n    }, 2500);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    title: \"TextUtils\",\n    mode: mode,\n    toggleMode: toggleMode,\n    textMode: textMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Alert, {\n    alert: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/Aboutbout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(About, {\n    textMode: textMode,\n    mode: mode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Textform, {\n    showAlert: showAlert,\n    heading: \"Enter the text to analyze below\",\n    mode: mode,\n    textMode: textMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })))));\n}\nexport default App;","map":{"version":3,"names":["Navbar","Textform","useState","Alert","React","BrowserRouter","Router","Routes","Route","Link","App","mode","setmode","textMode","settextMode","alert","setalert","toggleMode","document","body","style","backgroundColor","showAlert","title","message","type","msg","setTimeout"],"sources":["/Users/amrita/react-tutorial/textutils/src/App.js"],"sourcesContent":["import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\nimport React from 'react';\nimport { \n  BrowserRouter as Router, \n  Routes, \n  Route, \n  Link \n} from 'react-router-dom';\n\nfunction App() {\n\n  const [mode, setmode] = useState('light')\n  const [textMode, settextMode] = useState('dark')\n  const [alert, setalert] = useState(null);\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode(\"dark\");\n      settextMode(\"light\");\n      document.body.style.backgroundColor = \"#151515\";\n      showAlert(\"Dark mode has been enabled.\", \"success\");\n      document.title = 'TextUtils - Dark mode';\n    }\n    else {\n      setmode(\"light\");\n      settextMode(\"dark\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled.\", \"success\");\n      document.title = 'TextUtils - Light mode';\n    }\n\n  }\n\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 2500)\n  }\n\n  return (\n    <>\n      {/* navbar component */}\n      {/* <Navbar title=\"TextUtils\" about=\"About Textutils\"/> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} textMode={textMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <Routes>\n          <Route path='/Aboutbout'>\n            <About textMode={textMode} mode={mode} />\n          </Route>\n          <Route path='/'>\n            <Textform showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} textMode={textMode} />\n          </Route>\n        </Routes>\n\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB;AACA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,EACLC,IAAI,QACC,kBAAkB;AAEzB,SAASC,GAAG,GAAG;EAAA,gBAEWR,QAAQ,CAAC,OAAO,CAAC;IAAA;IAAlCS,IAAI;IAAEC,OAAO;EAAA,iBACYV,QAAQ,CAAC,MAAM,CAAC;IAAA;IAAzCW,QAAQ;IAAEC,WAAW;EAAA,iBACFZ,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAjCa,KAAK;IAAEC,QAAQ;EAEtB,IAAMC,UAAU,GAAG,SAAbA,UAAU,GAAS;IACvB,IAAIN,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfE,WAAW,CAAC,OAAO,CAAC;MACpBI,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CC,SAAS,CAAC,6BAA6B,EAAE,SAAS,CAAC;MACnDJ,QAAQ,CAACK,KAAK,GAAG,uBAAuB;IAC1C,CAAC,MACI;MACHX,OAAO,CAAC,OAAO,CAAC;MAChBE,WAAW,CAAC,MAAM,CAAC;MACnBI,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CC,SAAS,CAAC,8BAA8B,EAAE,SAAS,CAAC;MACpDJ,QAAQ,CAACK,KAAK,GAAG,wBAAwB;IAC3C;EAEF,CAAC;EAED,IAAMD,SAAS,GAAG,SAAZA,SAAS,CAAIE,OAAO,EAAEC,IAAI,EAAK;IACnCT,QAAQ,CAAC;MACPU,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;IACFE,UAAU,CAAC,YAAM;MACfX,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACE,uDAGE,oBAAC,MAAM;IAAC,KAAK,EAAC,WAAW;IAAC,IAAI,EAAEL,IAAK;IAAC,UAAU,EAAEM,UAAW;IAAC,QAAQ,EAAEJ,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACpF,oBAAC,KAAK;IAAC,KAAK,EAAEE,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACvB;IAAK,SAAS,EAAC,gBAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC7B,oBAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACL,oBAAC,KAAK;IAAC,IAAI,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACtB,oBAAC,KAAK;IAAC,QAAQ,EAAEF,QAAS;IAAC,IAAI,EAAEF,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACnC,eACR,oBAAC,KAAK;IAAC,IAAI,EAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACb,oBAAC,QAAQ;IAAC,SAAS,EAAEW,SAAU;IAAC,OAAO,EAAC,iCAAiC;IAAC,IAAI,EAAEX,IAAK;IAAC,QAAQ,EAAEE,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACtG,CACD,CAEL,CACL;AAEP;AAEA,eAAeH,GAAG"},"metadata":{},"sourceType":"module"}